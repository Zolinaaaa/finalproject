import pandas as pd
import os
import matplotlib.pyplot as plt

os.chdir(r"C:\Users\86159\Desktop\期末作业题\期末作业题\1m\1m")
df = pd.read_csv(r"C:\Users\86159\Desktop\期末作业题\期末作业题\SampleTarget.csv")
type_future = df.columns.values
df = df.fillna(0)
qb = pd.DataFrame()
qb["trading_day"] = df["trading_day"]
total = 1
for x in range(2, len(type_future)):
    name = type_future[x]
    pos = '{}.ft'.format(name)
    data = pd.read_feather(pos)
    data = data.fillna(method='ffill')

    for y in range(1, len(qb)):
        i = int(qb["trading_day"][y - 1])
        j = int(qb["trading_day"][y])
        prea = float(df.iloc[y - 1, :][name])
        a = float(df.iloc[y, :][name])
        pres = float(df.iloc[y - 1, :]["timestamp"])
        stamp = float(df.iloc[y, :]["timestamp"])
        predt = data[data["trading_day"] == i]
        ndata = data[data["trading_day"] == j]
        if (pres in list(predt["timestamp"])) and (stamp in list(ndata["timestamp"])):
            predt = predt[predt["timestamp"] == pres]
            ndata = ndata[ndata["timestamp"] == stamp]
            prep = float(predt["clz"])
            price = float(ndata["clz"])
            if (prep != "NaN") and (price != "NaN"):
                qb.loc[y, ["pnl"]] = (price- prep) * prea / prep
                qb.loc[y, ["turnover"]] = abs(a - (price - prep) * prea / prep)
                qb.loc[y, ["cost"]] = abs((a - (price - prep) * prea / prep) * 0.0003)
                qb.loc[y, ["pnl_net"]] = (price - prep) * prea / prep - abs((a - (price - prep) * prea / prep) * 0.0003)

            else:
                a = prea
                qb.loc[y, ["pnl"]] = 0
                qb.loc[y, ["turnover"]] = 0
        else:
            a = prea
            qb.loc[y, ["pnl"]] = 0
            qb.loc[y, ["turnover"]] = 0
    qb["pnl_sum"] = qb["pnl"].cumsum()
    qb["pnl_net_sum"] = qb["pnl_net"].cumsum()
    qb["cost_sum"] = qb["cost"].cumsum()
    qb["turnover_sum"] = qb["turnover"].cumsum()
    qb= qb.fillna(0)
    name_pnl = "pnl_" + name
    qb[name_pnl] = qb["pnl_sum"]
    name_pnl_net = "pnl_net_" + name
    qb[name_pnl_net] = qb["pnl_net_sum"]
    name_turnover_sum = "turnover_sum_" + name
    qb[name_turnover_sum] = qb["turnover_sum"]

    del qb['pnl']
    del qb['turnover']
    del qb['cost']
    del qb['cost_sum']
    del qb['pnl_net']

n = len(df.columns)
qb["pnl_sum"] = qb.iloc[:, 1:3 * n - 2:3].sum(axis=1)
qb["pnl_net_sum"] = qb.iloc[:, 2:3 * n - 2:3].sum(axis=1)
qb["turnover_sum"] = qb.iloc[:, 3:3 * n - 2:3].sum(axis=1)

std_pnl_sum = (qb["pnl_net_sum"].var()) ** 0.5
mean_pnl_sum = qb["pnl_net_sum"].mean()
sharp = round(mean_pnl_sum / std_pnl_sum, 2)
mean_turnover_sum = qb["turnover_sum"][len(qb) - 1] / len(df)
turnover = round(mean_turnover_sum / total, 2)
df["Total_position"] = df.iloc[:, 2:len(df.columns)].sum(axis=1)
AvgLeverage = round(df["Total_position"].sum() / (len(df) * total), 2)
title = str("SharpRatio:" + str(sharp) + "," + "TurnOver:" + str(turnover) + "," + "AvgLeverage:" + str(AvgLeverage))

x_axis_data = qb["trading_day"]
y_axis_data = qb["pnl_net_sum"]
y_axis_data2 = qb["pnl_sum"]

plt.plot(x_axis_data, y_axis_data2, color='blue', alpha=1, linewidth=1, label='pnl_net')
plt.plot(x_axis_data, y_axis_data, color='red', alpha=1, linewidth=1, label='pnl_net_after_limit')
plt.legend(loc="upper right")
plt.xlabel('time:' + str(df["trading_day"][0])[0:4] + '-' + str(df["trading_day"][int(len(df)) - 1])[0:4])
plt.ylabel('pnl')
plt.xticks(x_axis_data, ())
plt.title(title)
plt.show()
